//=============================================================================
//
// 壁クラス [wall.cpp]
// Author : AYANO KUDO
//
//=============================================================================
#include "wall.h"
#include "manager.h"
#include "renderer.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MODEL_PATH "./data/Models/wall000.x"    //モデルのパス

//*****************************************************************************
// 静的メンバ変数宣言
//*****************************************************************************
LPD3DXMESH   CWall::m_pMeshModel = NULL;   	//メッシュ情報へのポインタ
LPD3DXBUFFER CWall::m_pBuffMatModel = NULL;	//マテリアル情報へのポインタ
DWORD        CWall::m_nNumMatModel = 0;	    //マテリアル情報の数
//=============================================================================
// [CWall] コンストラクタ
//=============================================================================
CWall::CWall() : CModel(OBJTYPE_WALL)
{

}

//=============================================================================
// [~CWall] デストラクタ
//=============================================================================
CWall::~CWall()
{

}

//=============================================================================
// [Create] オブジェクトの生成
//=============================================================================
CWall * CWall::Create(D3DXVECTOR3 pos)
{
    CWall *pObject = NULL;
    if (!pObject)
    {
        pObject = new CWall;
        pObject->Init();
        // 初期化
        pObject->Init();
        pObject->SetPos(pos);

        // 各値の代入・セット
        pObject->SetObjType(OBJTYPE_WALL); // オブジェクトタイプ
    }
    return pObject;
}

//=============================================================================
// [Load] テクスチャの読み込み
//=============================================================================
HRESULT CWall::Load(void)
{
    // デバイスの取得
    LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
    //Xファイルの読み込み
    D3DXLoadMeshFromX(MODEL_PATH,
        D3DXMESH_SYSTEMMEM,
        pDevice,
        NULL,
        &m_pBuffMatModel,
        NULL,
        &m_nNumMatModel,
        &m_pMeshModel);

    return S_OK;
}

//=============================================================================
// [Unload] テクスチャの破棄
//=============================================================================
void CWall::Unload(void)
{
    //メッシュの破棄
    if (m_pMeshModel != NULL)
    {
        m_pMeshModel->Release();
        m_pMeshModel = NULL;
    }
    //マテリアルの破棄
    if (m_pBuffMatModel != NULL)
    {
        m_pBuffMatModel->Release();
        m_pBuffMatModel = NULL;
    }
}

//=============================================================================
// [Init] 初期化処理
//=============================================================================
HRESULT CWall::Init(void)
{
    if (FAILED(CModel::Init()))
    {
        return E_FAIL;
    }

    // テクスチャ割り当て
    BindModel(m_pMeshModel, m_pBuffMatModel, m_nNumMatModel);

    return S_OK;
}

//=============================================================================
// [Uninit] 終了処理
//=============================================================================
void CWall::Uninit(void)
{
    CModel::Uninit();
}

//=============================================================================
// [Update] 更新処理
//=============================================================================
void CWall::Update(void)
{
    CModel::Update();
}

//=============================================================================
// [Draw] 描画処理
//=============================================================================
void CWall::Draw(void)
{
    CModel::Draw();
}
